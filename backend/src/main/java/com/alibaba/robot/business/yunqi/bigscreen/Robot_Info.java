// automatically generated by the FlatBuffers compiler, do not modify

package com.alibaba.robot.business.yunqi.bigscreen;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.alibaba.robot.flatbuffers.*;

@SuppressWarnings("unused")
public final class Robot_Info extends Table {
  public static Robot_Info getRootAsRobot_Info(ByteBuffer _bb) { return getRootAsRobot_Info(_bb, new Robot_Info()); }
  public static Robot_Info getRootAsRobot_Info(ByteBuffer _bb, Robot_Info obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Robot_Info __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int type() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public int id() { int o = __offset(6); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }
  public Robot_Data data() { return data(new Robot_Data()); }
  public Robot_Data data(Robot_Data obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createRobot_Info(FlatBufferBuilder builder,
      int type,
      int id,
      int dataOffset) {
    builder.startObject(3);
    Robot_Info.addData(builder, dataOffset);
    Robot_Info.addId(builder, id);
    Robot_Info.addType(builder, type);
    return Robot_Info.endRobot_Info(builder);
  }

  public static void startRobot_Info(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addType(FlatBufferBuilder builder, int type) { builder.addByte(0, (byte)type, (byte)0); }
  public static void addId(FlatBufferBuilder builder, int id) { builder.addShort(1, (short)id, (short)0); }
  public static void addData(FlatBufferBuilder builder, int dataOffset) { builder.addOffset(2, dataOffset, 0); }
  public static int endRobot_Info(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishRobot_InfoBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedRobot_InfoBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }
}

